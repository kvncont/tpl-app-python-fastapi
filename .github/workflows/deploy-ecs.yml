name: Deploy to ECS

on:
  workflow_run:
    workflows: ["Build and Push Image to ECR"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_DEPLOY }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Render Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-arn: |
            {
              "family": "${{ vars.ECS_TASK_DEFINITION }}",
              "containerDefinitions": [
                {
                  "name": "${{ github.event.repository.name }}",
                  "image": "${{ vars.ECR_REPOSITORY_URL }}:${{ github.sha }}",
                  "essential": true,
                  "memory": 512,
                  "cpu": 256,
                  "portMappings": [
                    {
                      "containerPort": "80",
                      "hostPort": "80"
                    }
                  ]
                }
              ]
            }
          # task-definition-family: ${{ vars.ECS_TASK_DEFINITION }}
          # container-name: ${{ github.event.repository.name }}
          # image: ${{ vars.ECR_REPOSITORY_URL }}:${{ github.sha }}

      - name: Deploy to ECS Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          cluster: ${{ vars.ECS_CLUSTER }}
          service: ${{ vars.ECS_SERVICE }}
          task-definition: ${{ steps.task-def.outputs.task-definition-arn }}
          wait-for-service-stability: true
